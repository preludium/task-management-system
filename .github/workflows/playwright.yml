name: E2E Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1
        with:
          version: "latest"

      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .env
          echo "DATABASE_URL=${{ vars.DATABASE_URL }}" >> .env
          echo "ENVIRONMENT=${{ vars.ENVIRONMENT }}" >> .env
          echo "DEBUG=${{ vars.DEBUG }}" >> .env
          echo "ALLOWED_HOSTS=${{ vars.ALLOWED_HOSTS }}" >> .env
        shell: bash

      - name: Build and start services
        run: docker compose up --build -d

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install Playwright dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./frontend

      - name: Install Playwright browsers
        run: pnpm exec playwright install
        working-directory: ./frontend

      - name: Run Playwright tests
        working-directory: ./frontend
        run: pnpm test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

      - name: Stop services
        if: always()
        run: docker compose down
