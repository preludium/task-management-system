version: "3.8"

services:
  db:
    image: postgres:16-alpine
    container_name: task-management-db
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - task-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-management-backend
    environment:
      - DATABASE_URL=$DATABASE_URL
      - ENVIRONMENT=$ENVIRONMENT
      - DEBUG=$DEBUG
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('http://localhost:8000/health')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - task-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-management-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - task-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  task-network:
    driver: bridge
